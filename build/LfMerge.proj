<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTarget="Test">
	<PropertyGroup>
		<RootDir Condition="'$(RootDir)'==''">$(MSBuildProjectDirectory)/..</RootDir>
		<BUILD_NUMBER Condition="'$(BUILD_NUMBER)'==''">1.2.3.4</BUILD_NUMBER>
		<!-- Note, after some thought, we've decided this is the best place to keep the version number (not on TeamCity, not in the assemblies). -->
		<Version>0.1</Version>
	</PropertyGroup>

	<UsingTask TaskName="StampAssemblies" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="Archive" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="Split" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="FileUpdate" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="NUnit" AssemblyFile="$(RootDir)/build/Palaso.BuildTasks.dll" />
	<UsingTask TaskName="NUnitTeamCity"
		AssemblyFile="$(teamcity_dotnet_nunitlauncher_msbuild_task)"
		Condition=" '$(teamcity_version)' != '' And '$(OS)'=='Windows_NT'"/>
	<UsingTask TaskName="NUnitTeamCity"
		AssemblyFile="$(agent_home_dir)/plugins/dotnetPlugin/bin/JetBrains.BuildServer.MSBuildLoggers.dll"
		Condition=" '$(teamcity_version)' != '' And '$(OS)'!='Windows_NT'"/>

	<Import Project="NuGet.targets"/>

	<PropertyGroup>
		<Solution>LfMerge.sln</Solution>
		<SolutionPath>$(RootDir)/$(Solution)</SolutionPath>
		<ApplicationName>LfMerge</ApplicationName>
		<ApplicationNameLC>lfmerge</ApplicationNameLC>
		<Configuration Condition="'$(Configuration)'==''">Release</Configuration>
		<useNUnit-x86 Condition="'$(OS)'=='Windows_NT'">true</useNUnit-x86>
		<useNUnit-x86 Condition="'$(OS)'!='Windows_NT'">false</useNUnit-x86>
	</PropertyGroup>

	<Target Name="VersionNumbers">
		<Message Text="BUILD_NUMBER: $(BUILD_NUMBER)" Importance="high"/>
		<Message Text="RootDir=$(RootDir)"/>

		<Split Input="$(BUILD_NUMBER)" Delimiter="." OutputSubString="2">
			<Output TaskParameter="ReturnValue" PropertyName="BuildCounter" />
		</Split>

		<Message Text="BuildCounter: $(BuildCounter)" Importance="high"/>

		<CreateProperty Value="$(Version).$(BuildCounter).0">
			<Output PropertyName="FileVersion" TaskParameter="Value"/>
		</CreateProperty>

		<Message Text="Version: $(FileVersion)" Importance="high"/>
	</Target>

	<ItemGroup>
		<AssemblyInfoFiles Include="$(RootDir)/**/AssemblyInfo.cs"/>
	</ItemGroup>

	<Target Name="SetAssemblyVersion" DependsOnTargets="VersionNumbers">
	  <StampAssemblies Version="$(Version).0.0" FileVersion="$(FileVersion)" InputAssemblyPaths="@(AssemblyInfoFiles)" />
	</Target>

	<PropertyGroup>
		<OutputDir>$(RootDir)/output/$(Configuration)</OutputDir>
	</PropertyGroup>

	<Target Name="Build">
		<CallTarget Targets="Clean"/>
		<!-- SetAssemblyVersion has problems on TC with mono 4.0.
		<CallTarget Targets="SetAssemblyVersion"/>
		-->
		<CallTarget Targets="Compile"/>
		<Message Text="Build Complete"/>
	</Target>


	<ItemGroup>
		<ExistingObjectFiles
			Include="$(RootDir)/output/$(Configuration)/**/*"
			Exclude="$(RootDir)/.git/**/*"
		/>
	</ItemGroup>

	<Target Name="Clean">
		<Delete Files="@(ExistingObjectFiles)" />
		<Delete Condition="'$(OS)'=='Windows_NT'"
			 Files="$(RootDir)/**/obj/**/*" />
		<Exec Condition="'$(OS)'!='Windows_NT'"
			Command="find . %5c( -name obj -o -name bin -o -name test-results %5c) -type d -print0 | xargs -0 rm -rf"
			WorkingDirectory="$(RootDir)" />
		<Delete Files="build/LfMerge.files" />
	</Target>

	<Target Name="DownloadDependencies" DependsOnTargets="RestorePackages">
		<MSBuild
			Projects="LfMerge-DownloadDeps.xml"
			Targets="DownloadDependencies"
			Properties="Configuration=$(Configuration);RootDir=$(RootDir)" />
	</Target>

	<Target Name="PrepareSource" DependsOnTargets="RestorePackages;DownloadDependencies">
		<!-- This target gets called before building the source package -->
		<RemoveDir Directories="$(RootDir)/Downloads"/>
	</Target>

	<Target Name="Compile" DependsOnTargets="RestorePackages;DownloadDependencies">
		<CallTarget Targets="CompileOnly"/>
	</Target>

	<Target Name="CompileOnly">
		<!-- This target gets called during binary package build and shouldn't download
			anything -->
		<MSBuild
			Projects="$(SolutionPath)"
			Targets="Build"
			Properties="Configuration=$(Configuration)" />
	</Target>

	<Target Name="Test" DependsOnTargets="Build">
		<ItemGroup>
			<ExistingFiles Include="$(RootDir)/output/$(Configuration)/*" Condition="'$(OS)'=='Unix'" />
			<FdoFiles Include="/usr/lib/lfmerge/*" Condition="'$(OS)'=='Unix'"
				Exclude="@(ExistingFiles -> '/usr/lib/lfmerge/%(FileName)%(Extension)')" />
		</ItemGroup>
		<Copy SourceFiles="@(FdoFiles)" DestinationFolder="$(RootDir)/output/$(Configuration)"
			Condition="'$(OS)'=='Unix'"/>
		<CallTarget Targets="TestOnly"/>
	</Target>

	<Target Name="TestOnly" DependsOnTargets="RunNUnitTC;RunNUnit"/>

	<Target Name="RunNUnitTC" Condition="'$(teamcity_version)' != ''">
		<ItemGroup>
			<TestAssemblies Include="$(RootDir)/output/$(Configuration)/*.Tests.dll"/>
		</ItemGroup>

		<NUnitTeamCity
			Assemblies="@(TestAssemblies)"
			ExcludeCategory="SkipOnTeamCity;ByHand$(ExtraExcludeCategories)"
			NUnitVersion="NUnit-2.6.3" />
	</Target>

	<Target Name="RunNUnit" Condition="'$(teamcity_version)' == ''">
		<ItemGroup>
			<TestAssemblies Include="$(RootDir)/output/$(Configuration)/*.Tests.dll"/>
		</ItemGroup>

		<NUnit Assemblies="@(TestAssemblies)"
			ToolPath="$(RootDir)/packages/NUnit.Runners.Net4.2.6.4/tools"
			TestInNewThread="false"
			ExcludeCategory="$(excludedCategories)$(ExtraExcludeCategories)"
			WorkingDirectory="$(RootDir)/output/$(Configuration)"
			Force32Bit="$(useNUnit-x86)"
			Verbose="true"
			OutputXmlFile="$(RootDir)/output/$(Configuration)/TestResults.xml"/>
	</Target>

</Project>
