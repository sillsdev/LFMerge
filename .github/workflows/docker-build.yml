name: docker-build

on:
  push:
    branches: [ master, qa, live, fieldworks8-master, fieldworks8-qa, fieldworks8-live ]
  pull_request:
    branches: [ master, fieldworks8-master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # As of 2021-11-24, we build LfMerge for LCM DB versions 68-72 (and there is no 71)
    strategy:
      matrix:
        dbversion: [7000068, 7000069, 7000070, 7000072]
        distro: [ 'bionic' ]

    # Don't build unrelated versions on PRs
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && startsWith(github.base_ref, 'fieldworks8-') && matrix.dbversion < 7000072) || (github.event_name == 'pull_request' && !startsWith(github.base_ref, 'fieldworks8-') && matrix.dbversion >= 7000072)

    steps:
      - name: Echo dbversion and current ref
        env:
          DBVERSION: ${{ matrix.dbversion }}
          REFNAME: ${{ github.ref_name }}
          BASEREF: ${{ github.base_ref }}
        run: echo "DB version ${DBVERSION} and ref ${GITHUB_REF} (ref name ${REFNAME} and base ref ${BASEREF}) with current SHA ${GITHUB_SHA}"

      - name: Check out current branch
        uses: actions/checkout@v2
        if: matrix.dbversion >= 7000072
        with:
          fetch-depth: 0  # All history for all tags and branches, since GitVersion needs that

          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out FW8 branch
        uses: actions/checkout@v2
        if: matrix.dbversion < 7000072
        with:
          ref: fieldworks8-${{ github.base_ref }}
          fetch-depth: 0  # All history for all tags and branches, since GitVersion needs that

      - name: Verify current branch
        run: git branch --contains HEAD --format '%(refname)'
        if: false   # Skip during testing

      - name: Check out files needed for Docker build if on older branches
        # if: matrix.dbversion < 7000072
        if: false   # Skip during testing
        run:
          git checkout refs/remotes/origin/docker-build -- docker combined.dockerfile

      - name: Build base Docker image
        if: false   # Skip during testing
        run: docker build -t lfmerge-builder-base --target lfmerge-builder-base -f combined.dockerfile .

      - name: Build DBVersion-specific Docker image
        if: false   # Skip during testing
        run: docker build --build-arg DbVersion=${{matrix.dbversion}} -t lfmerge-build-${{matrix.dbversion}} -f combined.dockerfile .

      - name: Run the build container
        if: false   # Skip during testing
        run: docker run --name tmp-lfmerge-build-${{matrix.dbversion}} lfmerge-build-${{matrix.dbversion}}

      - name: Collect Debian images
        if: false   # Skip during testing
        run: docker container cp tmp-lfmerge-build-${{matrix.dbversion}}:/home/builder/packages/lfmerge/finalresults ./

      - uses: actions/upload-artifact@v2
        if: false   # Skip during testing
        with:
          name: lfmerge-deb-files
          path: finalresults/lfmerge*deb

      # TODO: If `live` branch, then create release
