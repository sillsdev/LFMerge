name: docker-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # As of 2021-11-24, we build LfMerge for LCM DB versions 68-72 (and there is no 71)
    strategy:
      matrix:
        dbversion: [7000068, 7000072]
        distro: [ 'bionic' ]

    steps:
      - name: Echo dbversion and current ref
        env:
          DBVERSION: ${{ matrix.dbversion }}
          REFNAME: ${{ github.ref_name }}
        run: echo "DB version ${DBVERSION} and ref ${GITHUB_REF} (ref name ${REFNAME}) with current SHA ${GITHUB_SHA}"

      - name: Check out current branch
        uses: actions/checkout@v2
        if: matrix.dbversion >= 7000072
        with:
          fetch-depth: 0  # All history for all tags and branches, since GitVersion needs that

          # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out FW8 branch
        uses: actions/checkout@v2
        if: matrix.dbversion < 7000072
        with:
          ref: fieldworks8-master  # For testing purposes only
          # Eventually this should be fieldworks8-${{ github.ref_name }}, but only for non-PR branches
          # For runs in pull requests, would only make sense to build the DB versions appropriate to that PR (either 72 or 68/69/70, depending)
          # Can use the logic of "if ref_head starts with 'fieldworks8-' then run" for DB versions before 72
          fetch-depth: 0  # All history for all tags and branches, since GitVersion needs that

      - name: Verify current branch
        run: git branch --contains HEAD --format '%(refname)'

      # Commenting out long-running steps while I verify that the Git checkout logic is correct
      # - name: Build base Docker image
      #   run: docker build -t lfmerge-builder-base --target lfmerge-builder-base -f combined.dockerfile .

      # - name: Build DBVersion-specific Docker image
      #   run: docker build --build-arg DbVersion=${{matrix.dbversion}} -t lfmerge-build-${{matrix.dbversion}} -f combined.dockerfile .

      # - name: Run the build container
      #   run: docker run --name tmp-lfmerge-build-${{matrix.dbversion}} lfmerge-build-${{matrix.dbversion}}

      # - name: Collect Debian images
      #   run: docker container cp tmp-lfmerge-build-${{matrix.dbversion}}:/home/builder/packages/lfmerge/finalresults ./

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: lfmerge-deb-files
      #     path: finalresults/lfmerge*deb

      # TODO: If `live` branch, then create release
