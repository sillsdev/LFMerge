name: release

on:
  workflow_call:
    inputs:
      MsBuildVersion:
        required: true
        type: string
      TagFor7000072:
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@1e31de5234b9f8995739874a8ce0492dc87873e2 # v4.0.0
      with:
        fetch-depth: 0

    - name: Ensure all TagForDbVersion outputs were present
      env:
        TAG72: ${{ inputs.TagFor7000072 }}
      run: |
        echo "Tag for FW9 (DbVersion 72): (${TAG72})"

    - name: Tag release branches
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      env:
        TAG72: ${{ inputs.TagFor7000072 }}
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git tag -f -a -m "Release ${TAG72}" "${TAG72}" "refs/remotes/origin/master"
        git push -v origin "${TAG72}"

    - name: Calculate Docker tags
      id: docker_tag
      env:
        MS_BUILD_VERSION: ${{ inputs.MsBuildVersion }}
      run: |
        if [ "${GITHUB_REF}" = 'refs/heads/master' ]
        then
          TAGS=ghcr.io/sillsdev/lfmerge:${MS_BUILD_VERSION},ghcr.io/sillsdev/lfmerge:latest
        else
          TAGS=ghcr.io/sillsdev/lfmerge:${MS_BUILD_VERSION}
        fi
        echo "DockerTags=${TAGS}" >> $GITHUB_OUTPUT

    - name: Download build artifacts
      uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
      with:
        # No name specified, so will download all artifacts
        path: all-tarballs

    - name: Verify that download step worked
      run: ls -lR all-tarballs

    - name: Uncompress build artifacts
      run: for f in all-tarballs/*/*.tar.gz; do gzip -cd "${f}" | tar xf -; done

    - name: Verify that uncompress step worked
      run: ls -lR tarball

    - name: Login to GHCR
      if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build final Docker image
      id: lfmerge_image
      uses: docker/build-push-action@v4.0.0
      with:
        push: ${{(github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'))}}
        tags: ${{ steps.docker_tag.outputs.DockerTags }}
        context: .
        file: Dockerfile.finalresult

    - name: Show metadata from LfMerge image build step
      run: echo "$METADATA"
      env:
        METADATA: ${{ steps.lfmerge_image.outputs.metadata }}

    - name: List Docker images to verify build
      run: docker image ls

    # During development, we'll want the Docker image as a build artifact
    - name: Save Docker image to tarball
      if: (!(github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')))
      run: docker image save "${TAG}" -o "lfmerge-${MS_BUILD_VERSION}.tar"
      env:
        MS_BUILD_VERSION: ${{ inputs.MsBuildVersion }}
        TAG: ghcr.io/sillsdev/lfmerge:${{ inputs.MsBuildVersion }}

    - name: Upload Docker image as build artifact
      if: (!(github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')))
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        name: lfmerge-docker-${{ inputs.MsBuildVersion }}
        path: lfmerge-${{ inputs.MsBuildVersion }}.tar
        compression-level: 6
